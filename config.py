import os
from os import getenv
from dotenv import load_dotenv

# ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ุฃููุงู
load_dotenv()

# ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช ุงูุขููุฉ ูู OWNER.py
try:
    from OWNER import (
        BOT_TOKEN, OWNER, OWNER_ID, infophoto, OWNER_NAME, 
        DATABASE, CHANNEL, GROUP, LOGS, PHOTO, VIDEO,
        validate_config
    )
    # ุงูุชุญูู ูู ุตุญุฉ ุงูุชูููู
    validate_config()
except ImportError as e:
    raise ImportError(f"โ ุฎุทุฃ ูู ุงุณุชูุฑุงุฏ ุงูุฅุนุฏุงุฏุงุช ูู OWNER.py: {e}")
except ValueError as e:
    raise ValueError(f"โ ุฎุทุฃ ูู ุงูุชูููู: {e}")

# =======================================
# ุฅุนุฏุงุฏุงุช Telegram API
# =======================================

API_ID = int(getenv("API_ID", "17490746"))
API_HASH = getenv("API_HASH", "ed923c3d59d699018e79254c6f8b6671")

# ุงูุชุญูู ูู ูุฌูุฏ API_ID ู API_HASH
if not API_ID or not API_HASH:
    raise ValueError("โ API_ID ู API_HASH ูุทููุจุงู ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ")

# =======================================
# ุฅุนุฏุงุฏุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช
# =======================================

MONGO_DB_URL = DATABASE

# =======================================
# ุฅุนุฏุงุฏุงุช ุงููุงูู ูุงููุทูุฑูู
# =======================================

# ุชุญููู OWNER_ID ุฅูู ูุงุฆูุฉ ุฅุฐุง ูู ุชูู ูุฐูู
if not isinstance(OWNER_ID, list):
    OWNER_ID = [OWNER_ID]

# =======================================
# ุฅุนุฏุงุฏุงุช ุฅุถุงููุฉ
# =======================================

# ูุฏุฉ ุงูุชุธุงุฑ ุงูุนูููุงุช
OPERATION_TIMEOUT = int(getenv("OPERATION_TIMEOUT", "300"))

# ูุถุน ุงูุชุทููุฑ
DEBUG_MODE = getenv("DEBUG_MODE", "false").lower() == "true"

# =======================================
# ุทุจุงุนุฉ ูุนูููุงุช ุงูุชูููู (ููุชุฃูุฏ)
# =======================================

if DEBUG_MODE:
    print("๐ง ูุนูููุงุช ุงูุชูููู:")
    print(f"   ๐ฑ API_ID: {API_ID}")
    print(f"   ๐ API_HASH: {'*' * (len(API_HASH) - 4) + API_HASH[-4:] if API_HASH else 'ุบูุฑ ูุญุฏุฏ'}")
    print(f"   ๐ค BOT_TOKEN: {'*' * 20 + BOT_TOKEN[-10:] if BOT_TOKEN else 'ุบูุฑ ูุญุฏุฏ'}")
    print(f"   ๐ OWNER_ID: {OWNER_ID}")
    print(f"   ๐ DATABASE: {'mongodb://*****' if DATABASE else 'ุบูุฑ ูุญุฏุฏ'}")
    print(f"   ๐บ CHANNEL: {CHANNEL}")
    print(f"   ๐ฅ GROUP: {GROUP}")
    print(f"   ๐ LOGS: {LOGS}")
    print("โ ุชู ุชุญููู ุงูุชูููู ุจูุฌุงุญ")

# =======================================
# ุงูุชุญูู ุงูููุงุฆู ูู ุงูุจูุงูุงุช ุงูุญุฑุฌุฉ
# =======================================

def final_config_check():
    """ุงูุชุญูู ุงูููุงุฆู ูู ุฌููุน ุงูุจูุงูุงุช ุงูุญุฑุฌุฉ"""
    critical_vars = {
        "API_ID": API_ID,
        "API_HASH": API_HASH,
        "BOT_TOKEN": BOT_TOKEN,
        "MONGO_DB_URL": MONGO_DB_URL,
        "OWNER_ID": OWNER_ID
    }
    
    missing_critical = [var for var, value in critical_vars.items() if not value]
    
    if missing_critical:
        error_msg = f"โ ุงูุจูุงูุงุช ุงูุญุฑุฌุฉ ุงูุชุงููุฉ ููููุฏุฉ:\n" + "\n".join(f"- {var}" for var in missing_critical)
        raise ValueError(error_msg)
    
    return True

# ุชุดุบูู ุงูุชุญูู ุงูููุงุฆู
final_config_check()
